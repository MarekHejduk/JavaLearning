#BlueJ class context
comment0.target=Platno
comment0.text=\r\n\ Trida\ Platno\ slouzi\ k\ jednoduchemu\ kresleni\ na\ virtualni\ platno.\r\n\ <p>\r\n\ Trida\ neposkytuje\ verejny\ konstruktor,\ protoze\ chce,\ aby\ jeji\ instance\r\n\ byla\ jedinacek,\ tj.\ aby\ se\ vsechno\ kreslilo\ na\ jedno\ a\ to\ same\ platno.\r\n\ Jedinym\ zpusobem,\ jak\ ziskat\ odkaz\ na\ instanci\ tridy\ Platno,\r\n\ je\ volani\ staticke\ metody\ <code>getPlatno</code>.</p>\r\n\ <p>\r\n\ Aby\ bylo\ mozno\ na\ platno\ obycejne\ kreslit\ a\ nebylo\ nutno\ kreslene\ objekty\r\n\ prihlasovat,\ odmazane\ casti\ obrazcu\ se\ automaticky\ neobnovuji.\r\n\ Je-li\ proto\ pri\ smazani\ nektereho\ obrazce\ odmazana\ cast\ jineho\ obrazce,\r\n\ je\ treba\ prislusny\ obrazec\ explicitne\ prekreslit.</p>\r\n\r\n\ @author\ \ \ \ \ Rudolf\ Pecinovsky\r\n\ @version\ \ \ \ 2.01,\ duben\ 2004\r\n
comment1.params=
comment1.target=void\ smaz()
comment1.text=\r\n\ Smaze\ platno,\ presneji\ smaze\ vsechny\ obrazce\ na\ platne.\r\n\ Tato\ metoda\ by\ mela\ byr\ definovana\ jako\ metodoa\ instance,\r\n\ protoze\ je\ instance\ jedinacek,\r\n\ byla\ metoda\ pro\ snazsi\ dostupnost\ definovana\ jako\ metoda\ tridy.\r\n\ Jinak\ by\ totiz\ bylo\ potreba\ vytvorit\ pred\ smazanim\ platna\ jeho\ instanci.\r\n
comment10.params=barva
comment10.target=void\ setBarvaPopredi(Barva)
comment10.text=\r\n\ Nastavi\ pro\ platno\ barvu\ popredi.\r\n\r\n\ @param\ \ barva\ \ Nastavovana\ barva\ popredi\r\n
comment11.params=
comment11.target=int\ getSirka()
comment11.text=\r\n\ Vrati\ sirku\ platna.\r\n\r\n\ @return\ \ Aktualni\ sirka\ platna\ v\ bodech\r\n
comment12.params=
comment12.target=int\ getVyska()
comment12.text=\r\n\ Vrati\ vysku\ platna.\r\n\r\n\ @return\ \ Aktualni\ vyska\ platna\ v\ bodech\r\n
comment13.params=sirka\ vyska
comment13.target=void\ setRozmer(int,\ int)
comment13.text=\r\n\ Nastavi\ novy\ rozmer\ platna\ zadanim\ jeho\ vysky\ a\ sirky.\r\n\r\n\ @param\ \ sirka\ \ Nova\ sirka\ platna\ v\ bodech\r\n\ @param\ \ vyska\ \ Nova\ vyska\ platna\ v\ bodech\r\n
comment14.params=
comment14.target=java.lang.String\ toString()
comment14.text=\r\n\ Prevede\ instanci\ na\ retezec.\ Pouziva\ se\ predevsim\ pri\ ladeni.\r\n\r\n\ @return\ Retezcova\ reprezentace\ dane\ instance.\r\n
comment15.params=obrazec
comment15.target=void\ zapln(java.awt.Shape)
comment15.text=\r\n\ Nakresli\ zadany\ obrazec\ a\ vybarvi\ jej\ barvou\ popredi\ platna.\r\n\r\n\ @param\ \ obrazec\ \ Kresleny\ obrazec\r\n
comment16.params=obrazec
comment16.target=void\ smaz(java.awt.Shape)
comment16.text=\r\n\ Smaze\ zadany\ obrazec\ na\ platne;\ obrazec\ vsak\ stale\ existuje,\r\n\ jenom\ neni\ videt.\ Smaze\ se\ totiz\ tak,\ ze\ se\ nakresli\ barvou\ pozadi.\r\n\r\n\ @param\ \ obrazec\ \ \ Obrazec,\ ktery\ ma\ byt\ smazan\r\n
comment17.params=text\ x\ y\ barva
comment17.target=void\ kresliString(java.lang.String,\ int,\ int,\ Barva)
comment17.text=\r\n\ Vypise\ na\ platno\ text\ aktualnim\ pismem\ a\ aktualni\ barvou\ popredi.\r\n\r\n\ @param\ \ text\ \ \ Zobrazovany\ text\r\n\ @param\ \ x\ \ \ \ \ \ x-ova\ souradnice\ textu\r\n\ @param\ \ y\ \ \ \ \ \ y-ova\ souradnice\ textu\r\n\ @param\ \ c\ \ \ \ \ \ Barva\ zadana\ jako\ textovy\ retezec\r\n
comment18.params=x1\ y1\ x2\ y2\ barva
comment18.target=void\ kresliCaru(int,\ int,\ int,\ int,\ Barva)
comment18.text=\r\n\ Nakresli\ na\ platno\ usecku\ se\ zadanymi\ krajnimi\ body.\r\n\ Usedku\ vykresli\ aktualni\ barvou\ popredi.\r\n\r\n\ @param\ \ x1\ \ \ \ x-ova\ souradnice\ pocatku\r\n\ @param\ \ y1\ \ \ \ y-ova\ souradnice\ pocatku\r\n\ @param\ \ x2\ \ \ \ x-ova\ souradnice\ konce\r\n\ @param\ \ y2\ \ \ \ x-ova\ souradnice\ konce\r\n\ @param\ \ barva\ Barva\ usecky\r\n
comment19.params=
comment19.target=void\ pripravObrazek()
comment19.text=\r\n\ Nastavi\ viditelnost\ platna.\r\n\ Pri\ nastaveni\ viditelneho\ platna\ je\ presune\ do\ popredi.\r\n\ Lze\ ji\ proto\ pouzit\ i\ pro\ presun\ jiz\ viditelneho\ platna\ do\ popredi.\r\n\r\n\ @param\ visible\ logicka\ hodnota\ pozadovane\ viditelnost\ (true\=viditelne)\r\n
comment2.params=
comment2.target=Platno\ getPlatno()
comment2.text=\r\n\ Jedina\ metoda\ umoznujici\ ziskat\ odkaz\ na\ instanci\ platna.\r\n\ Vraci\ vsak\ pokazde\ odkaz\ na\ stejnou\ instanci,\ protoze\ tato\ instance\r\n\ je\ jedinacek.\ Pokud\ instance\ pri\ volani\ metody\ jeste\ neexistuje,\r\n\ metoda\ instanci\ vytvori.\r\n\r\n\ @return\ Odkaz\ na\ instanci\ tridy\ Platno.\r\n
comment3.params=
comment3.target=Platno()
comment3.text=\r\n\ Implicitni\ (a\ jediny)\ konstruktor\ -\ je\ volan\ pouze\ jednou.\r\n
comment4.params=evt
comment4.target=void\ windowClosing(java.awt.event.WindowEvent)
comment5.params=g
comment5.target=void\ paint(java.awt.Graphics)
comment5.text=Povinne\ prekryvana\ abstraktni\ metoda\ tridy\ JPanel.
comment6.params=
comment6.target=boolean\ isViditelne()
comment6.text=\r\n\ Poskytuje\ informaci\ o\ aktualni\ viditelnosti\ okna.\r\n\r\n\ @return\ Je-li\ okno\ viditelne,\ vraci\ <b>true</b>,\ jinak\ vraci\ <b>false</b>\r\n
comment7.params=viditelne
comment7.target=void\ setViditelne(boolean)
comment7.text=\r\n\ Nastavi\ viditelnost\ platna.\r\n\r\n\ @param\ Viditelny\ logicka\ hodnota\ pozadovane\ viditelnost\ (true\=viditelne)\r\n
comment8.params=
comment8.target=Barva\ getBarvaPozadi()
comment8.text=\r\n\ Vrati\ aktualni\ barvu\ pozadi.\r\n\r\n\ @return\ \ \ Nastavena\ barva\ pozadi\r\n
comment9.params=barva
comment9.target=void\ setBarvaPozadi(Barva)
comment9.text=\r\n\ Nastavi\ pro\ platno\ barvu\ pozadi.\r\n\r\n\ @param\ barva\ \ Nastavovana\ barva\ pozadi\r\n
numComments=20
