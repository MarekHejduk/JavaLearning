#BlueJ class context
comment0.target=Cykly
comment1.params=
comment1.target=void\ forCyklus()
comment1.text=\r\n\ 1.\ hlavi\u010Dk\ for\ cyklu\ obsahuje\ t\u0159i\ \u010D\u00E1sti\:\r\n\ a)\ po\u010D\u00E1te\u010Dn\u00ED\ prom\u011Bnnou\r\n\ b)\ podm\u00EDnku\ dal\u0161\u00EDho\ kroku\ (neza\u010D\u00EDn\u00E1me\ if,\ ale\ jde\ n\u00E1m\ o\ logick\u00FD\ v\u00FDraz)\r\n\ c)\ iterace\ (nav\u00FD\u0161en\u00ED/sn\u00ED\u017Een\u00ED\ prom\u011Bnn\u00E9)\r\n\ 2.\ v\ hlavi\u010Dce\ jsou\ tyto\ \u010D\u00E1sti\ odd\u011Blen\u00E9\ st\u0159edn\u00EDky\r\n\ 3.\ cyklus\ "iteruje"\ \=\ iterace\ znamen\u00E1\ proch\u00E1zen\u00ED\r\n\ 4.\ pokud\ zvy\u0161ujeme/sni\u017Eujeme\ pouze\ o\ jednu\ hodnotu,\ m\u00E1me\ v\ Jav\u011B\ syntaxi\r\n\ ++\ nebo\ --\ u\ prom\u011Bnn\u00E9,\ kterou\ zvy\u0161ujeme/sni\u017Eujeme\ (POZOR,\ FUNGUJE\ TO\ V\u017DDY,\r\n\ NE\ JEN\ V\ CYKLU)\ i\ \=\ i+1\ je\ to\ sam\u00E9,\ jako\ i++\ (nav\u00FD\u0161en\u00ED\ +\ p\u0159i\u0159azen\u00ED)\r\n\ 5.\ pr\u016Fb\u011Bh\ for\ cyklu\:\ \r\n\ a)\ z\ hlavi\u010Dky\ si\ vezme\ po\u010D\u00E1te\u010Dn\u00ED\ hodnotu\ (int\ i\ \=\ 0)\r\n\ b)\ ov\u011B\u0159\u00ED\ si\ podm\u00EDnku\ z\ druh\u00E9\ \u010D\u00E1sti\ hlavi\u010Dky\ (zda\ je\ i\ <\ 100)\r\n\ c)\ pokud\ podm\u00EDnka\ plat\u00ED,\ vykon\u00E1\ se\ t\u011Blo\ cyklu\r\n\ d)\ na\ konci\ v\u0161ech\ p\u0159\u00EDkaz\u016F\ z\ t\u011Bla\ cyklu\ se\ vykon\u00E1\ t\u0159et\u00ED\ \u010D\u00E1st\ hlavi\u010Dky\ (i++)\r\n\ e)\ prvn\u00ED\ \u010D\u00E1st\ se\ u\u017E\ ne\u0159e\u0161\u00ED\ a\ p\u0159ejde\ se\ k\ podm\u00EDnce\ ze\ druh\u00E9\ \u010D\u00E1sti\ hlavi\u010Dky\r\n\ pozn.\ dalo\ by\ se\ \u0159\u00EDci,\ \u017Ee\ cyklus\ plat\u00ED,\ dokud\ plat\u00ED\ podm\u00EDnka\ ve\ druh\u00E9\ \u010D\u00E1sti\r\n\ 6.\ pokud\ je\ v\ t\u011Ble\ cyklu\ p\u0159\u00EDkaz\ "continue",\ ukon\u010D\u00ED\ se\ aktu\u00E1ln\u00ED\ iterace\ \r\n\ (ignoruje\ se\ zbytek\ t\u011Bla\ cyklu\ a\ p\u0159ejde\ se\ na\ podm\u00EDnky\ z\ druh\u00E9\ \u010D\u00E1sti\r\n\ hlavi\u010Dky)\r\n\ pozn.\ "continue"\ pouze\ v\ cyklu,\ "break"\ funguje\ v\ cyklu\ a\ ve\ switchi\r\n\ 7.\ pokud\ je\ v\ k\u00F3du\ p\u0159\u00EDkaz\ "break",\ tak\ se\ cyklus\ ukon\u010D\u00ED\r\n\ pozn.\ p\u0159\u00EDkazy\ "continue"\ i\ "break"\ se\ zapisuj\u00ED\ tak,\ \u017Ee\ se\ zap\u00ED\u0161e\ na\ \u0159\u00E1dek\r\n\ jen\ tento\ p\u0159\u00EDkaz\ a\ ";"\r\n\ pozn.\ pokud\ nen\u00ED\ "continue"\ nebo\ "break"\ v\ t\u011Ble\ podm\u00EDnky\ (if(){toto\ t\u011Blo}),\r\n\ tak\ se\ cyklus\ provede\ jen\ do\ dan\u00E9ho\ bodu,\ v\u0161e\ ostatn\u00ED\ bude\ ignorov\u00E1no\r\n
comment2.params=
comment2.target=void\ nekonecnyCyklus()
comment3.params=
comment3.target=void\ metodaWhile()
comment3.text=\r\n\ 1.\ u\ while\ plat\u00ED\ "d\u011Blej\ n\u011Bco,\ dokud\ plat\u00ED\ podm\u00EDnka"\r\n\ 2.\ rozd\u00EDl\ mezi\ for\ a\ while\:\ while\ pracuje\ se\ vstupem\r\n\ while\ pracuje\ do\ doby,\ ne\u017E\ dojde\ ke\ zm\u011Bn\u011B\ stavu\ (nap\u0159.\ ne\u017E\ n\u011Bco\ u\u017Eivatel\ \r\n\ zad\u00E1,\ ne\u017E\ bude\ ta\ a\ ta\ hodina,\ ne\u017E\ uplyne\ ur\u010Dit\u00FD\ \u010Das...)\r\n\ for\ pracuje\ s\ p\u0159esn\u011B\ stanoven\u00FDm\ po\u010Dtem\ prvk\u016F\r\n
comment4.params=
comment4.target=void\ metodaDoWhile()
comment4.text=\r\n\ projde\ alespo\u0148\ jednou\ (i\ kdyby\ podm\u00EDnka\ nebyla\ spln\u011Bna)\r\n\ funguje\ to\ tak,\ \u017Ee\ se\ poprv\u00E9\ provede\ "do",\ potom\ se\ vyhodnot\u00ED\ podm\u00EDnka\r\n\ a\ pokud\ podm\u00EDnka\ plat\u00ED,\ program\ se\ vr\u00E1t\u00ED\ p\u0159ed\ "do"\ a\ op\u011Bt\ jej\ provede,\r\n\ pokud\ podm\u00EDnka\ neplat\u00ED,\ pokra\u010Duje\ d\u00E1l\ v\ k\u00F3du\r\n
comment5.params=cislo
comment5.target=void\ rekurze(int)
comment5.text=\r\n\ 1.\ rekurze\ je\ metoda,\ kter\u00E1\ vol\u00E1\ samu\ sebe\r\n\ 2.\ je\ velice\ d\u016Fle\u017Eit\u00E9,\ aby\ v\ rekurzi\ byla\ podm\u00EDnka,\ do\ kdy\ m\u00E1\ platit\r\n\ pozn.\ pokud\ takov\u00E1\ podm\u00EDnka\ chyb\u00ED,\ program\ se\ zacykl\u00ED\ (velmi\ \u010Dast\u00E1\ chyba)\r\n\ 3.\ rekurze\ se\ vyu\u017E\u00EDv\u00E1\ p\u0159i\ proch\u00E1zen\u00ED\ adres\u00E1\u0159\u016F,\ p\u0159\u00EDpadn\u011B\ jin\u00FDch\ stromov\u00FDch\r\n\ struktur\r\n\ 4.\ rekurze\ by\ m\u011Bla\ m\u00EDt\ parametry,\ alespo\u0148\ jeden\r\n\ pozn.\ smyslem\ rekurze\ je\ v\u017Edy\ porovn\u00E1vat\ parametr\ a\ pokud\ vol\u00E1\ sama\r\n\ sebe\ znovu,\ tak\ se\ vol\u00E1\ s\ jin\u00FDm\ parametrem\r\n
numComments=6
